worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout 65;

    server {
		listen 80;
		# listen 443 ssl http2;
        # listen [::]:443 ssl http2;

		server_name localhost;

		# ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_certificate /etc/nginx/ssl/transcendence.crt;
        # ssl_certificate_key /etc/nginx/ssl/transcendence.key;

		root /usr/share/nginx/html;

		index index.html;

		location = /logged_in.html {
        	# Serve the static file directly
        	try_files /logged_in.html =404;
		}

        # Serve static files
        location /static/ {
            alias /app/static/;
        }

		location /uploads/ {
			alias /uploads/;
			autoindex off;
		}

		
		location / {
			try_files $uri /index.html;
		}

		location /admin/ {
			proxy_pass http://web:8000/admin/;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		location /oauth/ {
            proxy_pass http://web:8000/;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Referer $http_referer;
			proxy_set_header Origin $http_origin;  # Forward Origin header
			proxy_set_header Cookie $http_cookie; # Forward cookies
			proxy_set_header X-CSRFToken $http_x_csrf_token; # Forward CSRF token
			proxy_set_header Authorization $http_authorization;
        }


        # Proxy API requests to the backend
        location /api/ {
			proxy_pass http://web:8000/;
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Referer $http_referer;
			proxy_set_header Origin $http_origin;  # Forward Origin header
			proxy_set_header Cookie $http_cookie; # Forward cookies
			proxy_set_header X-CSRFToken $http_x_csrf_token; # Forward CSRF token
			proxy_set_header Authorization $http_authorization;
		}

		location /ws/ {
			proxy_pass http://web:8000/ws/;  # Backend ASGI server

			# Required for WebSocket connections
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";

			# Optional but recommended headers
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

			# Prevent timeouts
			proxy_read_timeout 300;
			proxy_send_timeout 300;
			proxy_connect_timeout 300;
			proxy_buffering off;
		}

    }
}
